@model ETicaretDersiProje.Eticaret.MvcWebUI.Models.ProductListViewModel
@{
    Layout = "../_LayoutPageFirma.cshtml";
}

@using (Html.BeginForm(Html.BeginForm("Create", "Firma", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
<div class="form-horizontal">
    <h3 class="sign-h text-danger">Yeni Ürün Oluştur</h3>
    <div class="form-group">
        @Html.LabelFor(model => model.Product.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Product.ProductName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Product.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product.ProductDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Product.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product.UnitPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Product.Discount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product.Discount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.QuantityPerUnit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Product.QuantityPerUnit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product.QuantityPerUnit, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Product.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="image" name="image" class="form-control" accept=".jpg,.png" />
            @Html.ValidationMessageFor(model => model.Product.Picture, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Product.CategoryID, (IEnumerable<SelectListItem>)Model.Categories, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Product.CategoryID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.SizeID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Product.SizeID, (IEnumerable<SelectListItem>)Model.Sizes, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Product.SizeID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.ColorID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Product.ColorID, (IEnumerable<SelectListItem>)Model.Colors, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Product.ColorID, "", new { @class = "text-danger" })
        </div>
    </div>

  

    <div class="form-group">
        @Html.LabelFor(model => model.Product.DiscountAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Product.DiscountAvailable, (IEnumerable<SelectListItem>)new SelectList(new List<SelectListItem>
            {
                new SelectListItem { Selected = true, Text = "True", Value = "True"},
                new SelectListItem { Selected = false, Text = "False", Value = "False"}

            },"Value","Text"), new { @class="form-control" })
            @Html.ValidationMessageFor(model => model.Product.DiscountAvailable, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.CurrentOrder, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Product.CurrentOrder, (IEnumerable<SelectListItem>)new SelectList(new List<SelectListItem>
            {
                new SelectListItem { Selected = true, Text = "True", Value = "True"},
                new SelectListItem { Selected = false, Text = "False", Value = "False"}

            },"Value","Text"), new { @class="form-control" })
            @Html.ValidationMessageFor(model => model.Product.CurrentOrder, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Kaydet" class="btn btn-default" id="sign-frm-input-btn" />
        </div>
    </div>


</div>
}
